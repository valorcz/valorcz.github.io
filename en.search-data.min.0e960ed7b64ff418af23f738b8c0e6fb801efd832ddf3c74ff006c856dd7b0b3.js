'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/projects/','title':"Projects",'content':""});index.add({'id':1,'href':'/docs/projects/secure-home-net/brainstorming/','title':"Brainstorming",'content':"Secure Home Network Subnet Definitions Let\u0026rsquo;s start with some subnets definitions:\n VPN subnet  For indidivual users B2B (or rather Home-2-Home) networks will use individual subnets.   WiFi  guest kids main   Docker/VMs  For any kind of VMs, Kubernetes, etc.   Infrastruktura  Switches, routers, APs, management interfaces of NAS, anything else fitting this category (e.g. Docker mgmt) LDAP, Kerberos, Keycloak   Home network  Most likely the same thing as the main Wi-Fi network.    VPN TBD.\nInfrastructure TBD.\nHome Network TBD.\nDaemons \u0026amp; Technologies Just a list of things\n NTP FreeIPA  de-facto standard for LDAP \u0026amp; Kerberos   DHCP  Can be integrated with FreeIPA FreeIPA DHCP Integration Design   DNS  dns-over-https support would be cool pi-hole integration (filter out all the ads and nastyness) Cloudflare DNS servers could be used as well (for both IPv4 and IPv6) Needs to be integrated with FreeIPA   Keycloak  SSO, social network accounts \u0026amp; registration, \u0026hellip;   Docker (or any better kind of conteiners support)  Or podman perhaps, as it\u0026rsquo;s more supported by RedHat/CentOS See https://thenewstack.io/check-out-podman-red-hats-daemon-less-docker-alternative/ for more information   SMTP  What\u0026rsquo;s the recommended SMTP server these days?   Wireguard  As it\u0026rsquo;s a modern VPN solution, with IPv6 support, native Linux implementation, etc.   Proper bastion- (jump-) server  So that all the management accesses are properly routed through a single place SSH Stepstone   nginx \u0026amp; haproxy  most likely, as some of the services will be HTTPS based   let\u0026rsquo;s encrypt agent  as we need certificates   Log management  syslog (rsyslog, syslog-ng) ELK/Splunk/Graylog   Monitoring  grafana prometheus icinga(?)   Network IDS  Suricata/Bro Question: routing vs mirroring on switches? Both possible, different purposes   Anything from the HomelabOS project  PlexTV Hosted mail app Wiki    Also:\n fvechecker proxmox -- VM hypervisor pi-hole octopi diskstation,ds TV NIDSSensor "});index.add({'id':2,'href':'/docs/projects/secure-home-net/resources/','title':"Resources",'content':"Interesting Resources    URL Description     HomelabOS Basically a personal datacenter, which is a huge part of what I\u0026rsquo;d like to put together.    "});index.add({'id':3,'href':'/docs/teaching/memory-analysis/','title':"Memory Analysis",'content':"In-Memory Malware Analysis This page contains some information and links for In-Memory Malware Analysis course.\nIn case of any questions, don\u0026rsquo;t hesitate to contact me at vaclav.lorenc-at-gmail.com or @valorcz on Twitter.\nCourse Texts  In-Memory Analysis (text) \u0026mdash; A brief introduction to reverse engineering and memory forensics (English). In-Memory Analysis (slides) \u0026mdash; Handouts for this course (English).  Tools and Templates  In-Memory Analysis (tools) \u0026mdash; A bootstrap folder structure with Volatility Framework and other tools. Unzip the file (if you know how, edit your %PATH% variable to contain the \\bin folder).  Memory Images Most of the memory images here can be found and downloaded from Volatility Framework page. Download the file into your \\images folder (it\u0026rsquo;s in the unzipped folder structure from the previous step).\n   URL Description     Infected WinXP A very basic Windows XP system, easy to analyze.   Clean Win7, x64 A clean image of Win7 Home memory, x64 platform (packed with bzip2).   Zeus (older version) Windows XP infected with Zeus.   Zeus (newer version) Windows XP infected with never version of Zeus.   Cridex (trojan, backdoor) A host infected with Cridex.   SpyEye (keylogger) A host infected with SpyEye.   DarkComet (keylogger) A memory image of a host infected with DarkComet. Due to its size, this memory image si zipped.   IE history analysis A memory image with a browser history to be analyzed.   Bob! Detailed Forensics Memory image to test your forensic skills (foremost can help you, be careful with dumped files).    Links    URL Description     Volatily Framework Powerful open source tool for memory analysis with command-line interface. Python powered.   Rekall Memory Forensic Framework Completely open collection of tools for the collection and extraction of digital artifacts from memory. Python powered.   FireEye Redline Free (not open source) memory forensic tool, with nice GUI and decent forensic capabilities. For Windows only, requires latest .NET Framework.   Reverse Engineering for Beginners Excellent and free material for everyone who wants to dive into reverse engineering. Incredible stuff!   SANS DFIR Memory Forensics Poster A poster with overview of memory forensics tools, workflows, commands and internals.   Windows VMs When you need a fully functional Windows VM with a browser (IE or Edge).    Homework Your homework is as easy as forensic analysis. Ok, way easier :)\nAnalyse the image below, write a report and summarize your findings in such a way that I can possibly reproduce the process of your analysis. Use all the tools we used in the class, but only if you can work in a safe environment (VMWare, VirtualBox or Unix-based OS). If not, you don\u0026rsquo;t have to dump any files from the memory image, especially if you don\u0026rsquo;t trust your AV. Stay safe and keep your computer clean. If you want to perform more detailed analysis, you are cordially invited.  You are expected to write a report with your analysis \u0026ndash; what volatility commands you used, what was the result, what did you find interesting and important. Preferebly, if you can put together a full story of what happened, that could bring you some extra points.\nIn case you need an inspiration in the report writing, here\u0026rsquo;s one: a sample report. Your report doesn\u0026rsquo;t have to be that detailed, yet try to be as descriptive as possible.\n Your Homework \u0026mdash; Memory image to test your skills (big warning here \u0026ndash;be careful with dumped files!).  Material prepared and created for Laboratory of Applied Security and Cryptography\n"});index.add({'id':4,'href':'/docs/newsletters/2018-newsletter/','title':"2018-November",'content':"Long time, no see… It’s been a while since I shared any news from the outer world. Doesn’t necessarily mean I stopped reading or caring about the world or you, it just was a difficult year for me. But it’s time to restart this activity, hopefully with more feedback this time! :)\nBefore we really start, I’d like to thank Shawn McGhee and Marek Kumpost for their suggestions, corrections and help with this. All the typos and grammar mistakes are mine though.\nTake a sip from your morning coffee and let’s dive into my notes!\nThe Death of Expertise As a first story, I’d like to share an article that resonated with me strongly – The Death of Expertise. Why? Because many and many of the article paragraphs actually expressed my observations. Like this one:\n In politics, too, the problem has reached ridiculous proportions. People in political debates no longer distinguish the phrase “you’re wrong” from the phrase “you’re stupid.” To disagree is to insult. To correct another is to be a hater. And to refuse to acknowledge alternative views, no matter how fantastic or inane, is to be closed-minded.\n Please, read the article too. I consider it worth every minute of your precious time.\nAnd now, let’s get to the less serious stuff!\nDealing with Time is Easy, Right? Every security analyst has to deal with time, from time to time (silly joke, I know). There is a general agreement that UTC solves the known issues of dealing with various timezones and daylight savings. But honestly, what do you know about the time? Could you remember the rules for the leap years? Does GMT have daylight savings?\nThere are way more interesting glitches in the whole ‘people dealing with time’ problematics. Let me quote one paragraph here:\n Beyond that, though, there’s also a lot about time itself that is properly hilarious, and it’d be a travesty to not talk about the country that recently decided to skip a certain day, or that the Unix epoch isn’t technically the number of seconds since January 1970, or that February 30 happened at least twice in history.\n Has it caught your curiosity? Good! Continue with reading at UTC is Enough for Everyone, Right?.\nI remember that some are not much into reading, so don’t worry, I got you covered – Zach gave a speech at a conference and it’s available on YouTube: Closing Keynote by Zach Holman on \u0026ldquo;UTC is Enough for Everybody, Right?\nMachine Learning Machine Learning’s ‘Amazing’ Ability to Predict Chaos In new computer experiments, artificial-intelligence algorithms can tell the future of chaotic systems. Not sure whether it’s scary or fascinating (both, probably?), but the article goes through some basics of chaos theory and shows how the machine learning predicted one chaotic system way better than any other technique.\n After training itself on data from the past evolution of the Kuramoto-Sivashinsky equation, the researchers’ reservoir computer could then closely predict how the flamelike system would continue to evolve out to eight “Lyapunov times” into the future, eight times further ahead than previous methods allowed, loosely speaking. The Lyapunov time represents how long it takes for two almost-identical states of a chaotic system to exponentially diverge. As such, it typically sets the horizon of predictability.\n Go ahead and get scared too!\n Link: Machine Learning’s ‘Amazing’ Ability to Predict Chaos  Machine Learning failures No matter how awesome and powerful the machine learning technology is, it can fail. And it can fail hilariously!\n I hooked a neural network up to my Roomba. I wanted it to learn to navigate without bumping into things, so I set up a reward scheme to encourage speed and discourage hitting the bumper sensors. It learnt to drive backwards, because there are no bumpers on the back.\n More examples can be found in this shared Google Drive document.\nBig Data Random Links The links below are not really random, but I don’t want to spend much time talking about them – they are both about using Jupyter Labs or Jupyter Notebooks for data analytics. There are many reasons for doing so, nicely explained in the first linked article, so I’ll just emphasis one of them – repeatability of the analysis process. It’s very useful for anyone else validating your research, and it can be used for teaching and trainings as well.\n Why Jupyter is data scientists’ computational notebook of choice Interactive notebooks: Sharing the code  And it can be integrated with many other data analysis systems too!\nMachine Learning Courses Quick list of the great resources to ML:\n Machine Learning, by Andrew Ng – recommended by a friend of mine!  Other great course:\n Advanced stuff: Neural Networks for Machine Learning, by Geoffrey Hinton – the links seems to be broken now, but it’s more like an internal error on Coursera side, as it\u0026rsquo;s still listed as available.  Btw, did you know that a huge deal of DNA analysis is about statistics and probability? Bayes’ theorem to convict a murderer!\nProgramming Our company has an incredible number of developers. Very smart developers. It’s always easier to deal with them if you know how they think. Therefore, I dedicate a portion of my spare time to teach people programming; both at work and at the university in Brno. I know it could be observed as a non-necessary skill for a security analyst, but it also provides grounds that prove to be useful for many other fields. And I believe we need to train people for problems that do not exist yet.\nHow to think like a programmer And what could be a better opening than a famous quote?\n “Everyone in this country should learn to program a computer, because it teaches you to think.” — Steve Jobs\n We often need to deal with complex systems – and the complex systems bring a lot of complex problems. It’s easy to get overwhelmed by these and that’s where the programming skills (or some algorithmic thinking) could be a huge benefit and an ally. Problem solving is a skill; and as such, it can be learned and trained.\n Link: How to think like a programmer — lessons in problem solving  And as a side note, for the real programmers in the audience – we all know that the syntax doesn’t matter, as we all can write Fortran code in any language! (The following article is almost as old as I am, but it’s still good! :))\n Link: Real Programmers Don’t Use PASCAL  What’s a Sparse Merkle Tree? Blockchain technologies are still popular, even though the payment systems are bit declining these days. However, there is still a lot to be learned from all the principles leveraged within the cryptocurrency designs. Sparse Merkle Trees are one of them. Good stuff! Hashes included!\n If you’ve been around the Ethereum research community lately, you might’ve heard of something called a sparse Merkle tree. They might sound scary, but they’re really quite simple. This post will explain exactly what a sparse Merkle tree is, why they’re cool, and what they’re currently being used for.\n  Link: What’s a Sparse Merkle Tree?  Vulnerabilities Vulnerability management is a fast moving work, dealing with all the new vulnerabilities as fast as possible. No way I could cover all the latest announcements – and I don’t have any aspirations to do so, we have a specialized team for this. But how about some retrospective? What if we look more into what now seems to be a more generic problem?\nCPU Vulnerabilities Summary \u0026amp; History Designing a piece of silicon that’s as huge and complex as current processors is unimaginable for me. I have absolutely no clear idea about how anything of this complexity could be designed at all. And we have seen recently that doing the design right is not easy for the huge and skilled companies either.\nLet me quote one nice tweet here:\n Allow me to summarize x86 side channel attacks:\n Spectre v1: speculation is insecure by design Spectre v2: secure branch prediction matters Meltdown: Intel are dumbasses L1TF: Intel are monumental, inexcusable dumbasses PortSmash: hyperthreading is insecure by design   And there’s more:\n CacheBleed, MemJam, PrefetchSideChannel, TLBleed, RetSpectre, Other Spectre variants, various attacks on L1, L2, L3 cache. Various attacks on arithmetic units are all serious x86 side channels.\n  Link: https://twitter.com/marcan42/status/1058404388794847232– and it’s worth reading through the whole thread.  But are these vulnerabilities indeed so novel and surprising?\nMost of the world got suddenly scared by the new attacks popping out of nowhere. Was it unexpected, though? The novel part of it was to have a working exploit, definitely – that finally got the companies addressing the issues and brought it into more public audience. However, the problem (side-channel attacks on CPUs) has been observed and reported years ago. Like here: Side channel attacks: Intel vs. AMD, in the article from 2006! Also, notice the differences in the communication and approaches between Intel and AMD.\nLast, but not least, side-channel attacks; they are an amazing security-research field. So let’s use some Wikipedia definition here just to give you some brief idea should you need it:\n In computer security, a side-channel attack is any attack based on information gained from the implementation of a computer system, rather than weaknesses in the implemented algorithm itself (e.g. cryptanalysis and software bugs). Timing information, power consumption, electromagnetic leaks or even sound can provide an extra source of information, which can be exploited.\n Super-Micro Story One reading pertinent to the CPU vulnerabilities could be about the Super Micro company and the mystery of an extra chip on their mother boards. You’ve read it and many other pertinent articles too, so I’d rather ask you – what do you think of the story? Is it real? Is it not?\n Link: Decoding the Chinese Super Micro super spy-chip super-scandal: What do we know – and who is telling the truth?  Experts are not convinced much, more reading can be found at:\n Link: Investigating Implausible Bloomberg Supermicro Stories Link: @KimZetter Twitter Thread  Interesting Books One year is such a long time I don’t really remember every interesting book I’ve read, so this is mostly taken from my Goodreads list. Feel free to find me there, I’d like to know more about your books too :)\nThe Phoenix Project: A Novel About IT, DevOps, and Helping Your Business Win Our company is perfectly organized and with rock-solid processes, indeed. But there are companies less lucky than ours and they had to get over various IT issues. They had fought the battles the new companies can learn from – and this book is exactly about the IT management.\nPersonally, I didn’t like how everything was easy in the book (I’ve spent too much time in corporates), but the overall inspiration is still useful.\n tl;dr: Implementing SixSigma methodology in IT is helpful, even though some may find it unlikely and difficult to believe. Link: The Phoenix Project: A Novel About IT, DevOps, and Helping Your Business Win  The Signal and the Noise: Why So Many Predictions Fail - But Some Don’t Being in security usually means someone will eventually ask you for metrics and predictions. And we all know that “… it is very hard to predict, especially the future…” (Niels Bohr).\nBeen there, done that, I assume, right? The book I am about to recommend deals with the predictions and what could impact their accuracy. All supported by real stories and past events, illustrating why the lack of data can be as dangerous as the sh*t load of rubbish data.\n tl;dr: Read it. It’s fun and it’s useful. You may understand better why Bayes’ Theorem is so important. Has chapters about poker, stock market and weather forecasting! Link: The Signal and the Noise: Why So Many Predictions Fail - But Some Don’t  The Best Sci-Fi in Years? The Three-Body Problem! I have no idea how to write a proper book review (you may have noticed that already :)), so just quickly – for many years, I was looking for a good, scientific sci-fi story. The Martian by Andy Weir was great, creating such a great story with a minimalistic, scientific approach. The Three-Body Problem is different. It covers hundreds of years, it’s both technical and psychological, it tries to discover the behavior of humankind under different conditions; and it’s Chinese. It really feels unlike anything I’ve read before, and I loved the books, the whole trilogy!\n Link: The Three-Body Problem  Concluding Words It’s my hope you found at least one bit interesting. Way too many articles and links didn’t make it to this issue (like my notes and links to Riemann hypothesis and why is it important and whether the proof was or wasn’t accepted by the experts), but I believe there will be more newsletters sent soon.\nI’d like to repeat why I think this is important for our team. I quoted this in the past, so this is just a reminder:\n “Knowledge and productivity are like compound interest. […] The more you know, the more you learn; the more you learn, the more you can do; the more you can do, the more the opportunity – it is very much like compound interest. I don’t want to give you a rate, but it is a very high rate. Given two people with exactly the same ability, the one person who manages day in and day out to get in one more hour of thinking will be tremendously more productive over a lifetime.”\n  Link: You and Your Research  And let me ask you a rhetorical question – how much of the “one more hour of thinking (one hour of learning)” we can do during our BAUs? How much have we planned for it?\nLast, but not least – please, help me to make this newsletter better! Your help, links, topic and editing suggestions, any corrections… they will be appreciated and you’ll get a credit. And you\u0026rsquo;ll gain instant fame! :)\n"});index.add({'id':5,'href':'/docs/newsletters/2020-01-newsletter/','title':"2020-January",'content':"A Very Long Good Bye  “I didn’t have time to write a short letter, so I wrote a long one instead.”\n― Mark Twain\n Good news, everyone! A new issue of my very irregular (not-so-much-about-security-now) newsletter is out!\nMy original idea of publishing this every quarter (or so) was clearly too optimistic, as you can see. Which leads to a huge problem \u0026ndash; there\u0026rsquo;s a load of links and texts I\u0026rsquo;d like to share with you, and the length of the text could be demotivating, I know. On the other hand, you can always skim the text, check for your favorite sections (if there are any), and maybe you\u0026rsquo;ll find something new you didn\u0026rsquo;t know before. That would make me super happy, as that\u0026rsquo;s the purpose of these annoyingly long posts.\nAlso, plenty of the news aren\u0026rsquo;t real news, as I started writing this in November 2018.\nHappy reading!\nRandomness This newsletter is usually organized in a random order, which gives randomness the right to start this particular issue. Have you ever realized how important the randomness is? It took me a while (and I needed help from my PhD colleagues) to realize how critical component to the whole security field this is. The past months were proving it a lot, so let\u0026rsquo;s jump to our first section and topics.\nThe curious case of 7zip approach to randomness https://threadreaderapp.com/thread/1087848040583626753.html\nNot everything mentioned on Stackoverflow is perfect. Not everything that could be found there is technically correct. And definitely not everything there is well designed. \u0026ldquo;Didn\u0026rsquo;t review it but it should be fine.\u0026quot; is a sentence you don\u0026rsquo;t want to hear when it comes to anything related to security. Especially if it\u0026rsquo;s about password protection of your favorite sensitive packed files. (If you don\u0026rsquo;t know what IV in that article stands for, it\u0026rsquo;s Initialization Vector, the thing used at the beginning of many cryptography primitives)\nCracking passwords in 2 seconds https://link.medium.com/4h2AkytYHT\nAchieving confidentiality could be difficult in eGov world, especially if you need to distribute something to people who don\u0026rsquo;t have their passwords set or the technology doesn\u0026rsquo;t support custom passwords. But you can choose a scheme that\u0026rsquo;s good enough, like first_four_letters_of_name_in_uppercase + year_of_birth. Basically there are 4 uppercase alphabets \u0026amp; 4 digits involved, which means 2821109907456 combinations; and it would take 90 years to crack the password if we try 1000 combinations per second. However, not all combinations were born equal, which you can observe immediately. And the article describes it even better.\nBeat slot machines by science https://www.wired.com/2017/02/russians-engineer-brilliant-slot-machine-cheat-casinos-no-fix/\nHonestly, I am not sure whether I shared this (rather old) story with you before or not. It\u0026rsquo;s my favorite story about the importance of good randomness, with a grain of brilliant reverse engineering, some casinos, slot machines, Russians, 1 Czech guy (yay!), and the high-level information that a good cryptologist joining the dark side could earn huge money. Last, but not least, it\u0026rsquo;s very well written, so please, if you have some time, read it.\nIncident Response When your external communication sucks https://techcrunch.com/2018/12/03/marriott-data-breach-response-risk-phishing/amp/\nIncident response is a tricky area – company management wants updates immediately and often, the team needs to process gigabytes/terabytes of data, situation is usually complicated with inter-personal relationships in a company, lots of stress everywhere. Plenty of things can go wrong.. and as you can guess, it\u0026rsquo;s sometimes very obvious. Let\u0026rsquo;s see how NOT to communicate with publicwhen an incident happens.\nDisk Encryption Google disk encryption function https://security.googleblog.com/2019/02/introducing-adiantum-encryption-for.html\nAES is an encryption standard. The encryption standard, and for many security professionals, it\u0026rsquo;s the only encryption standard. But in security, it\u0026rsquo;s rarely \u0026lsquo;one size fits them all\u0026rsquo;. And because I have a friend who worked hard in the field of disk encryption, he spoke highly about the new function introduced by Google. I think it\u0026rsquo;s good to know about options, especially if we are supposed to design our solutions well.\nProgramming Not sure I should keep the section here, as some of the interesting articles and blogposts weren\u0026rsquo;t much about security, yet I found them worth reading and sharing.\nA fork() in the road https://www.microsoft.com/en-us/research/uploads/prod/2019/04/fork-hotos19.pdf\nIt was sad to see how little I knew about fork() implementation. Copy-on-write? Sure, I knew. File handles? Yes, I was aware. Threads? Hmm, not so much. The overall design of fork() on the modern systems? Not at all. Least privilege principles violated by fork() are obvious when mentioned specifically, but not always obvious. The mere complexity of fork() for contemporary applications like Chrome, Apache or PostgreSQL was unexpected. The linked article sums it up very nicely \u0026ndash; the origins of fork(), the identified problems, complexity issues, possible solutions to it (I\u0026rsquo;ve learned about spawn()). And it also emphasized the fact that if you want to implement fork() in your OS kernel, you may end up designing the whole kernel around it.\nSheng, a small but fast Deterministic Finite Automaton https://branchfree.org/2018/05/25/say-hello-to-my-little-friend-sheng-a-small-but-fast-deterministic-finite-automaton/amp/\nSince I learned about finite automata theory during my university studies, I got super excited about it. While theoretical at first sight, the possible applications were endless (regexes, iptables, utf-8 validation, credit card protocols, game engines; you name it). \u0026ldquo;Sheng\u0026rdquo; is just another DFA, yet I enjoyed reading the article, as it\u0026rsquo;s very technical (CPU instructions, L1 cache) and the Sheng\u0026rsquo;s focus is on simplicity.\nHow We Wrote a Self-Hacking Game in C++ https://link.medium.com/91oDdU8TAU\nI can probably say it safely now, as it\u0026rsquo;s been decades since it happened \u0026ndash; I learned x86 assembly mostly because I wanted to understand how games were written (a kind of reverse engineering) and along the way, I also learned how to make effective cheats and/or copy-protection bypasses. Ahem. You know it now. Yet it was a great lecture \u0026ndash; learning how others wrote a code and being able to craft tiny patches changing the behavior of the game just slightly enough to give me an edge. And now, it seems there\u0026rsquo;s a game encouraging everyone to do exactly this! The article is about the initial idea and the C++ implementation of such a game.\nHTTP security headers https://www.netsparker.com/whitepaper-http-security-headers/\nNetSuite, as a web-application company, is built around HTTP(s). Our application engineers are amazing in understanding all the details of the HTTP traffic, various headers and their uses, and sometimes we need to understand those too. This article is just a brief overview of some interesting/important headers. Not all of the mentioned headers are valid anymore, as web is a fast moving landscape (https://ordina-jworks.github.io/security/2018/02/12/HPKP-deprecated-what-now.html)\nBooks / Generic Wisdom Algorithms to Live By: The Computer Science of Human Decisions https://www.amazon.com/Algorithms-Live-Computer-Science-Decisions/dp/1627790365\nDuring World War II, researchers at the Center for Naval Analysis faced a critical problem. Many bombers were getting shot down on runs over Germany. The naval researchers knew they needed hard data to solve this problem and went to work. After each mission, the bullet holes and damage from each bomber was painstakingly reviewed and recorded. The researchers poured over the data looking for vulnerabilities. The data began to show a clear pattern \u0026ndash; most damage was to the wings and body of the plane. The solution to their problem was clear. Increase the armor on the plane\u0026rsquo;s wings and body.\nBut there was a problem. The analysis was completely wrong. Before the planes were modified, a Hungarian-Jewish statistician named Abraham Wald reviewed the data. Wald had fled Nazi-occupied Austria and worked in New York with other academics to help the war effort. Wald\u0026rsquo;s review pointed out a critical flaw in the analysis. The researchers had only looked at bombers who’d returned to base. What was missing from the data? Every plane that had been shot down and never made it back to the base.\nWe call it a \u0026ldquo;survival bias\u0026rdquo; now.\nAnd the book contains a lot of other useful examples (sorting, selection algorhitms, overfitting, \u0026hellip;). Just avoid reading its Czech translation, it didn\u0026rsquo;t go well and plenty of the used terms have verymisleading, too creative translations.\nThe Intelligence Trap: Why Smart People Make Dumb Mistakes https://www.amazon.com/Intelligence-Trap-Smart-People-Mistakes/dp/0393651428/\nJack is looking at Anne but Anne is looking at Goerge. Jack is married but George is not. Is a married person looking at an unmarried person? (Yes/No/Cannot be determined).\nCan you answer the previous question? And is your answer right? Because the intuition in this part usually doesn\u0026rsquo;t work, and finding the right answer usually takes more thinking than it seems.\nBut the book has a plenty of other great examples when our intelligence comes to wrong conclusions. Why smart people make dump mistakes? In other words, why a high IQ in itself is not enough to guarantee success in any area of life? Even a nobel prize awareded person can still believe in flath earth, or any other nonsense.\nIf you trust your brain a lot, and it never failed you in the fields it was trained on, why should it be failing in other areas, right? Weapons of Math Destruction https://www.amazon.com/Weapons-Math-Destruction-Increases-Inequality/dp/0553418831/\nMachine learning is a tool, and as a such, it can be used in good ways and horrible ways. This book describes how good intentions and poorly designed models (can) lead to horrible results. We could probably put a tagline to it: M__achine L__earning_: Tested on humans_.\nMental Models I Find Repeatedly Useful https://link.medium.com/TWCYY48W0S\nClaude Shannon: How a Genius Solves Problems https://link.medium.com/kLiVKtlelS\nNot a book, actually, just an article I found when I was searching some extra information about Claude Shannon. And yet I find the article well written (and relatively short), so if you are not familiar with Mr. Shannon and his work, this could be a good start.\nLinux / Other LD_PRELOAD: The Hero We Need and Deserve https://blog.jessfraz.com/post/ld_preload/\nLD_PRELOAD is a powerful mechanism many Linux people used for some reason (either legit or less legit). To check some very cool use-cases, follow the links, it\u0026rsquo;s very inspirational! Things like influencing random-number-generators (RNGs) for poor SSH key generation, convincing programs to work with unsupported environment, enabling rapid-fire in Quake3 Arena, disabling SSL certificate validation.. Endless possibilities!\nTCP BBR + DCTCP TCP BBR: https://blog.apnic.net/2017/05/09/bbr-new-kid-tcp-block/ and https://link.medium.com/deFX8IC2KU\nDCTCP: https://www.kernel.org/doc/Documentation/networking/dctcp.txt\nThere\u0026rsquo;s only one TCP we use in networks, right? It starts with the three way handshake, and it continues with some packages; and the transmissions in confirmed. It\u0026rsquo;s designed so well, that it can handle variability in the bandwidth, it can deal with errors, it\u0026rsquo;s basically pretty awesome. And the original design is very generic, which brings some sub-optimal performance in many specific situations.\nTCP congestion control/algorithms represent one huge family of how TCP performance can be improved under specific conditions. TCP BBR is one example, DC-specific TCP (or DCTCP, as it\u0026rsquo;s being referred) is another example.\nTLS Fingerprinting https://link.medium.com/Cd29DgPDwT\nhttps://engineering.salesforce.com/open-sourcing-ja3-92c9e53c3c41\nHTTPS and it\u0026rsquo;s end-to-end encryption makes our IDS probes almost irrelevant (especially with TLS 1.3), and it\u0026rsquo;s one of the reasons why a visibility into a network traffic becomes more and more challenging. Various papers and mechanisms were designed to deal with the increasing complexity (starting with basic netflow analysis, more complex statistical approaches, ending with machine learning).\nBut a smart idea can be a huge life savior – what if you start focusing on a moment when a TLS connection is being established, for example, which ciphers are supported by a client? What if you design a standardized way of making this a signature (a fingerprint)? Could it identify a potentially malicious clients? You bet eBPF, XDP XDP == Express Data Path, a lot of hardware offloading. Extended Berkeley Packet Filter (eBPF), a generalized concept of including a bytecode from userspace to kernel in a safe way. Why should we bother? Well, we\u0026rsquo;d love to use it one day for our Suricata deployments! Don\u0026rsquo;t get confused, it\u0026rsquo;s not only about packets, it\u0026rsquo;s way more flexible. Generally, it\u0026rsquo;s a great technological improvement that started in 1992.\n https://thenewstack.io/linux-technology-for-the-new-year-ebpf/ https://qmonnet.github.io/whirl-offload/2016/09/01/dive-into-bpf/(a lot of links, even from 2019) https://blogs.igalia.com/dpino/2019/01/07/introduction-to-xdp-and-ebpf/ https://sematext.com/blog/linux-kernel-observability-ebpf/ And the whole great thread starting at https://twitter.com/qeole/status/1101450782841466880  And don\u0026rsquo;t get mistaken – eBPF is a whole new approach to many other topics in Linux world. Performance measurements (I’ll hopefully mention it in some further newsletters), security policies enforcement (e.g. you can check and enforce encryption algorithms used by applications/system); the replacement for iptables (and for nftables a direct successor to iptables) will use eBPF.\nIt\u0026rsquo;s very likely we\u0026rsquo;ll see eBPF mentioned in the projects we\u0026rsquo;ve been using – Suricata team adopted these some time ago, Illumio and Tanium may have started updating their products to leverage it as well.\nSSH News Signed SSH certificates\n https://www.vaultproject.io/docs/secrets/ssh/signed-ssh-certificates.html  CASSH: SSH Key Signing Tool\n https://link.medium.com/FgMEFRA5vS  Blockchain Once hailed as unhackable, blockchains are now getting hacked https://www.technologyreview.com/s/612974/once-hailed-as-unhackable-blockchains-are-now-getting-hacked/amp/\nLessons learned: if you call something unhackable, make sure people can\u0026rsquo;t hack it.\nThe huge advertised benefit of crypto currencies (also the reason for them for being invented) was the lack of a central authority. It was the community, whoever got engaged to the crypto project, and the mathematics making sure everything is sound and no one could cheat. The blockchain, the history of all transactions, is validated by multiple entities at the same time, so whoever would like to cheat (like double-spending a coin) would have to gain a majority in the system, to convince the rest of the validation group about the attacker\u0026rsquo;s source of truth. And gaining that majority is economically inefficient.. for some crypto coins.. but not for all of them.\n\u0026ldquo;In total, hackers have stolen nearly $2 billion worth of cryptocurrency since the beginning of 2017, mostly from exchanges, and that’s just what has been revealed publicly.\u0026quot;\nMachine Learning word2vec https://skymind.ai/wiki/word2vec\n\u0026ldquo;King\u0026rdquo; -\u0026ldquo;Man\u0026rdquo; + \u0026ldquo;Woman\u0026rdquo; = \u0026ldquo;Queen\u0026rdquo;\n\u0026ldquo;Library\u0026rdquo; - \u0026ldquo;Books\u0026rdquo; = \u0026ldquo;Hall\u0026rdquo;\n\u0026ldquo;President\u0026rdquo; - \u0026ldquo;Power\u0026rdquo; = \u0026ldquo;Prime Minister\u0026rdquo;  The equations above look unexpected, yet they make some sort of sense, don\u0026rsquo;t they? Call me Cpt. Obvious, but I learned about \u0026ldquo;word2vec\u0026rdquo; just recently. First, it was because it was invented by another Czech guy working at Google and I saw an interview with this guy accidentally; second because it\u0026rsquo;s an incredible mechanism and I found it difficult to believe it really works. word2vec is an algorithm that transforms words into vectors (\u0026ldquo;word embedding algorithm\u0026rdquo;), so that words with similar meaning end up laying close to each other. That enables plenty of algorithms to work with words efficiently. Btw, it wasn\u0026rsquo;t really clear from the beginning why the word2vec math works so greatly that it allows the math over words, and other teams spent time explaining it (https://p.migdal.pl/2017/01/06/king-man-woman-queen-why.html)\nGAN: Generative Adversarial Networks https://link.medium.com/5T14H12cQT\nIf it\u0026rsquo;s adversarial, then it needs to be related to security somehow, right? I guess that\u0026rsquo;s not how English works, even though it\u0026rsquo;d make the language more foreigners-friendly :) Back to the topic though \u0026ndash; you\u0026rsquo;ve surely heard of \u0026ldquo;deepfake\u0026rdquo; (aka real-time facial reenactment, https://www.youtube.com/watch?v=gLoI9hAX9dw). All these were created by GANs, Generative Adversarial Networks, which you can read more about in the linked article. The process of training a GAN is taken from game theory called the minimax game, that\u0026rsquo;s where the \u0026ldquo;adversarial\u0026rdquo; comes from. One neural network generates content, the other network tries to distinguish whether the given content is real or fake.\nAre all the GANs inherently evil? Not at all, it\u0026rsquo;s just a tool. On the good side, you can for example improve game textures with GANs (https://www.extremetech.com/gaming/282695-modders-are-using-ai-to-overhaul-old-games-textures-with-gorgeous-results), giving games like Doom 2, Morrowind or Max Payne remastered graphics in almost no time (well, not entirely true, but it definitely saves a lot of human effort). Next step could be the remaster of 3D models to make them more detailed. Or this https://tcwang0509.github.io/pix2pixHD/ project, in which you start with Microsoft Paint and end up with a photo-realistic image.\nRelated Links:\n https://thispersondoesnotexist.com/ https://www.thiscatdoesnotexist.com/ https://thisresumedoesnotexist.com/ https://stackroboflow.com/(this StackOverflow question does not exist)  ZeroAlpha https://www.nytimes.com/2018/12/26/science/chess-artificial-intelligence.html\nComputers have been winning games of chess for years now, by leveraging many various strategies, past game recordings, handful of heuristics, etc. But what if the only thing you give to the ML algorithm is just the rules?\nI\u0026rsquo;ll quote the article here, as it left me speechless:\n Most unnerving was that AlphaZero seemed to express insight. It played like no computer ever has, intuitively and beautifully, with a romantic, attacking style. It played gambits and took risks. In some games it paralyzed Stockfish and toyed with it. While conducting its attack in Game 10, AlphaZero retreated its queen back into the corner of the board on its own side, far from Stockfish’s king, not normally where an attacking queen should be placed.\nYet this peculiar retreat was venomous: No matter how Stockfish replied, it was doomed. It was almost as if AlphaZero was waiting for Stockfish to realize, after billions of brutish calculations, how hopeless its position truly was, so that the beast could relax and expire peacefully, like a vanquished bull before a matador. Grandmasters had never seen anything like it. AlphaZero had the finesse of a virtuoso and the power of a machine. It was humankind’s first glimpse of an awesome new kind of intelligence.\n Data sets Just a link here, it\u0026rsquo;s been a lot of my text already.\nhttps://www.altexsoft.com/blog/datascience/best-public-machine-learning-datasets/\nCyberSecurity ML 101 https://towardsdatascience.com/machine-learning-for-cybersecurity-101-7822b802790b\nIf nothing I wrote above made sense to you and besides my English it was mostly because you didn\u0026rsquo;t understand the terms, don\u0026rsquo;t worry \u0026ndash; there\u0026rsquo;s this page where you can read some basic definitions and get some initial pointers as well as ideas for using ML for network and endpoint protection, application security, and user and process behavior.\nAlso, you can combine it with https://www.youtube.com/watch?v=aircAruvnKk video (But what *is* a Neural Network? | Deep learning, chapter 1, by 3Blue1Brown channel) which I recommend as well\nDemoscene http://www.lofibucket.com/articles/64k_intro.html\nAnd my favorite personal topic (more on the programming side), so just a brief annotation taken from the article:\n \u0026ldquo;The demoscene is about producing cool real time works (as in “runs on your computer”) called demos. Some demos are really small, say 64 kilobytes or less, and these are called intros. The name comes from “crack intros”. So an intro is just a demo that’s small.\nI’ve noticed many people have interest in demoscene productions but have no idea how they are actually made. This is a braindump/post-mortem of our recent 64k intro Guberniya and I hope that it will be interesting to newcomers and seasoned veterans alike. This article touches basically all techniques used in the demo and should give you an idea what goes into making one. I refer to people with their nick names in this article because that’s what sceners do.\u0026rdquo;\n "});index.add({'id':6,'href':'/posts/','title':"Blog",'content':""});index.add({'id':7,'href':'/docs/','title':"Docs",'content':""});index.add({'id':8,'href':'/docs/newsletters/','title':"Irregular Security Newsletters",'content':""});index.add({'id':9,'href':'/docs/projects/secure-home-net/','title':"Secure Home Network Project",'content':"The idea for this project was given to me by Petr Šafařík, a great friend of mine and a former colleague.\n"});index.add({'id':10,'href':'/docs/teaching/','title':"Teaching materials",'content':"The stuff I teach about.\n"});})();